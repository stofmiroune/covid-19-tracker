{"ast":null,"code":"var _jsxFileName = \"/Users/jsns/Desktop/covid-19-tracker/src/Components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  let lineChart;\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  if (dailyData) {\n    lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n      data: {\n        labels: dailyData.map(({\n          date\n        }) => date),\n        datasets: [{\n          data: dailyData.map(({\n            confirmed\n          }) => confirmed),\n          label: \"Infected\",\n          borderColor: \"#3333ff\",\n          fill: true\n        }, {\n          data: dailyData.map(({\n            deaths\n          }) => deaths),\n          label: \"Deaths\",\n          borderColor: \"red\",\n          backgroundColor: \"rgba(255,0,0,0.5)\",\n          fill: true\n        }]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }) : null;\n  }\n\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\", \"rgba(242, 234, 0, 0.5)\"],\n        hoverBackgroundColor: [\"rgba(0, 77, 153)\", \"rgba(30, 102, 49)\", \"rgba(255, 51, 51)\", \"rgba(204, 153, 0)\"],\n        data: [confirmed.value, recovered.value, deaths.value, confirmed.value - (recovered.value + deaths.value)]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/jsns/Desktop/covid-19-tracker/src/Components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","lineChart","dailyData","setDailyData","fetchAPI","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","hoverBackgroundColor","value","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  let lineChart;\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n  if(dailyData){\n  lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n    }\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n              \"rgba(242, 234, 0, 0.5)\",\n            ],\n            hoverBackgroundColor: [\n              \"rgba(0, 77, 153)\",\n              \"rgba(30, 102, 49)\",\n              \"rgba(255, 51, 51)\",\n              \"rgba(204, 153, 0)\",\n            ],\n            data: [\n              confirmed.value,\n              recovered.value,\n              deaths.value,\n              confirmed.value - (recovered.value + deaths.value),\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}